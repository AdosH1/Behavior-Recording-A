/**
 * Sample React Native App
 * https://github.com/facebook/react-native
 *
 * @format
 * @flow
 */

import React, {Fragment} from 'react';
import {
  SafeAreaView,
  StyleSheet,
  ScrollView,
  View,
  Text,
  StatusBar,
  Image,
  TextInput,
  Button,
  //PushNotificationIOS
} from 'react-native';
var PushNotification = require("react-native-push-notification");

import {
  Header,
  LearnMoreLinks,
  Colors,
  DebugInstructions,
  ReloadInstructions,
} from 'react-native/Libraries/NewAppScreen';

const App = () => {

  // setTimeout(function() {
  //     PushNotificationIOS.presentLocalNotification({ alertBody: "Test Push Notification Function", alertAction: "view" });
  // }, 3000);
  
  // PushNotificationIOS.requestPermissions();



  PushNotification.configure({
    // (optional) Called when Token is generated (iOS and Android)
    onRegister: function(token) {
      console.log("TOKEN:", token);
    },
  
    // (required) Called when a remote or local notification is opened or received
    onNotification: function(notification) {
      console.log("NOTIFICATION:", notification);
    },

    // Should the initial notification be popped automatically
    // default: true
    popInitialNotification: true,
  
    /**
     * (optional) default: true
     * - Specified if permissions (ios) and token (android and ios) will requested or not,
     * - if not, you must call PushNotificationsHandler.requestPermissions() later
     */
    requestPermissions: true
  });

//   PushNotification.localNotification({
//     /* Android Only Properties */
//     id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
//     ticker: "My Notification Ticker", // (optional)
//     autoCancel: true, // (optional) default: true
//     largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
//     smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
//     bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
//     subText: "This is a subText", // (optional) default: none
//     color: "red", // (optional) default: system default
//     vibrate: true, // (optional) default: true
//     vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
//     tag: 'some_tag', // (optional) add tag to message
//     group: "group", // (optional) add group to message
//     ongoing: false, // (optional) set whether this is an "ongoing" notification
//     priority: "high", // (optional) set notification priority, default: high
//     visibility: "private", // (optional) set notification visibility, default: private
//     importance: "high", // (optional) set notification importance, default: high

//     /* iOS only properties */
//     // alertAction: // (optional) default: view
//     // category: // (optional) default: null
//     // userInfo: // (optional) default: null (object containing additional notification data)

//     /* iOS and Android properties */
//     title: "My Notification Title", // (optional)
//     message: "My Notification Message", // (required)
//     playSound: false, // (optional) default: true
//     soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
//     number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
//     repeatType: 'day', // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
//     actions: '["Yes", "No"]',  // (Android only) See the doc for notification actions to know more
// });

  let uwaLogo = {uri: 'https://www.courseseeker.edu.au/assets/images/institutions/1055.png'};

  return (
    <Fragment>
      <SafeAreaView>
        <ScrollView
          contentInsetAdjustmentBehavior="automatic"
          style={styles.scrollView}>

            <View style={{flex: 1, flexDirection: 'column', justifyContent:'space-between'}}>
            <View style={{ height: 25, }}></View>

              <Image source={uwaLogo} style={{width: 330, height: 110,  margin: 5,}} />

              <View style={{ height: 50, }}></View>
              <View style={styles.body}>
                <View style={styles.sectionContainer}>

                  <Text style={styles.sectionTitle}>Login</Text>
                  <Text>Username: </Text>
                  <TextInput
                    style={styles.userInput}
                    placeholder="Enter username here."/>
                  <Text>Password: </Text>
                  <TextInput
                    style={styles.userInput}
                    placeholder="Enter password here."/>
                  <Button style={{height: 40, marginTop: 5,}} onPress={() => { alert('You tapped the button!'); }} title="Login" />
                </View>
              </View>

          </View>
        </ScrollView>
      </SafeAreaView>
    </Fragment>
  );
};

const styles = StyleSheet.create({
  scrollView: {
    backgroundColor: Colors.white,
  },
  body: {
    backgroundColor: Colors.white,
    textAlignVertical: 'center'
  },
  sectionContainer: {
    marginTop: 32,
    paddingHorizontal: 24,
    // borderStyle: 'solid',
    // borderWidth: 1,
    // borderColor: 'grey',
    padding: 10,
    flex: 1,
    flexDirection: 'column',
    justifyContent: 'space-between'
  },
  sectionTitle: {
    fontSize: 24,
    fontWeight: '600',
    color: Colors.black,
  },
  sectionDescription: {
    marginTop: 8,
    fontSize: 18,
    fontWeight: '400',
    color: Colors.dark,
  },
  userInput: {
    height: 40, 
    borderStyle: 'solid',
    borderWidth: 1,
    borderColor: 'grey',
  },
  highlight: {
    fontWeight: '700',
  },
  footer: {
    color: Colors.dark,
    fontSize: 12,
    fontWeight: '600',
    padding: 4,
    paddingRight: 12,
    textAlign: 'right',
  },
});

export default App;
